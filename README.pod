=head1 NAME

cower - a simple AUR downloader

=head1 SYNOPSIS

Usage: I<cower> E<lt>operationE<gt> [ options ] [ targets ]

=head1 DESCRIPTION

cower is a simple tool to get information and download packages from the Arch
User Repository (AUR). Invoking cower consists of supplying an operation, any
applicable options, and usually one or more targets.

=head1 OPERATIONS

=over 4

=item B<-d, --download>

Download I<target>. Pass this option twice to fetch dependencies (done
recursively).

=item B<-i, --info>

Show info for I<target>. Pass this option twice to fetch more detailed info.

=item B<-m, --msearch>

Search for packages maintained by I<target>.

=item B<-s, --search>

Search for packages with the I<target>(s) as the search term(s). Queries with
multiple targets will return the result of the intersection of all query
results. Extended regex patterns as defined by POSIX are allowed.

B<Note:> This is more or less a hack because it's implemented on top of the
AUR's the 2 character search minimum and lack of regex. cower will search based
on the first span of 2 non-regex characters it finds and filter using the
regular expression provided. cower makes no guarantees that complex patterns
will return accurate results.

=item B<-u, --update>

Check foreign packages for updates in the AUR. Without any arguments, all
manually installed packages will be checked. If targets are supplied, only
those targets will be checked. This operation can be combined with the
--download operation.

=back


=head1 OPTIONS

=over 4

=item B<-b>, B<--brief>

Show output in a more script friendly format. Use this if you're wrapping cower
for some sort of automation.

=item B<-c>, B<--color>[B<=>I<WHEN>]

Use colored output. WHEN is `always' or `auto'. Color will be disabled in a
pipe unless WHEN is set to always.

=item B<--debug>

Show debug output. This option should be passed first if used.

=item B<-f, --force>

Overwrite existing files when downloading.

=item B<--format=>I<FORMAT>

Print outside from --info, --search, and --msearch operations described by the
provided format string. See the FORMATTING section.

=item B<-h, --help>

Display the help message and quit.

=item B<--ignore=>I<PKG>

Ignore a package upgrade. Can be used more than once. Also accepts a comma
delimited list as a single argument. Packages listed in pacman's IgnorePkg
directive are honored.

=item B<--ignorerepo>[B<=>I<REPO>]

Ignore a binary repo when checking for updates. Can be used more than once.
Also accepts a comma delimited list as a single argument. When the argument
to this option is left blank, all binary repos are ignored and only the AUR
is queried.

=item B<--listdelim=>I<STRING>

Specify a delimiter when printing list formatters, default to 2 spaces. This
option only has an effect when using the -ii operation combined with --format.
See the FORMATTING section.

=item B<--nossl>

Avoid usage of secure http connections to the AUR.

=item B<-n, --comments>

Print comments from the AUR web interface (implies -ii).

=item B<-q, --quiet>

Output less.

=item B<-t> I<DIR>, B<--target=>I<DIR>

Download targets to alternate directory, specified by I<DIR>. Either a relative
or absolute path can be specified, but all components of the path must exist.

=item B<--threads=>I<NUM>

Limit the number of threads created, with a default of 10. In practice, you
should never need to bother with this setting. Other than the case of an
--update operation with no targets specified, a thread is created for each
target provided to cower. If cower has fewer targets than threads specified,
the number of threads created will instead be the number of targets.

=item B<--timeout=>I<NUM>

Specify how long libcurl is willing to wait for a connection to be made, in
seconds. By default, this is 10 seconds. Setting this value to 0 will disable
timeouts.

=item B<-v, --verbose>

Output more. This primarily affects the update operation.

=item B<-V, --version>

Display version and exit.

=back

=head1 FORMATTING

When the B<--format> option is used with the --search, --msearch, or --info
operations, the following sequences are interpreted within the formatter::

  %c    category

  %d    description

  %i    id

  %l    license

  %n    name

  %o    votes

  %p    AUR page

  %t    out of date (yes/no)

  %u    project URL

  %v    version

  %%    a literal %

When --info is specified twice, the following formatters are also available (if
the PKGBUILD specifies them). Items in these lists are delimited according to
the --listdelim option.

  %C    conflicts

  %D    depends

  %M    makedepends

  %O    optdepends

  %P    provides

  %R    replaces

Full printf formatter support with justification and field width is supported,
e.g. '%-20o'. Simple backslash escape sequences are also honored for lowercase
formatters -- see B<printf>(1).

=head1 CONFIG FILE

cower honors a config file which will be looked for first at:

  $XDG_CONFIG_HOME/cower/config

and falling back to:

  $HOME/.config/cower/config

A documented example config file can be found at /usr/share/cower/config.

=head1 AUTHOR

Dave Reisner E<lt>d@falconindy.comE<gt>

